/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
import * as import0 from '../../src/agGridNg2';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/linker/component_factory';
export declare class Wrapper_AgGridNg2 {
    _eventHandler: Function;
    context: import0.AgGridNg2;
    _changed: boolean;
    _changes: {
        [key: string]: any;
    };
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    _expr_8: any;
    _expr_9: any;
    _expr_10: any;
    _expr_11: any;
    _expr_12: any;
    _expr_13: any;
    _expr_14: any;
    _expr_15: any;
    _expr_16: any;
    _expr_17: any;
    _expr_18: any;
    _expr_19: any;
    _expr_20: any;
    _expr_21: any;
    _expr_22: any;
    _expr_23: any;
    _expr_24: any;
    _expr_25: any;
    _expr_26: any;
    _expr_27: any;
    _expr_28: any;
    _expr_29: any;
    _expr_30: any;
    _expr_31: any;
    _expr_32: any;
    _expr_33: any;
    _expr_34: any;
    _expr_35: any;
    _expr_36: any;
    _expr_37: any;
    _expr_38: any;
    _expr_39: any;
    _expr_40: any;
    _expr_41: any;
    _expr_42: any;
    _expr_43: any;
    _expr_44: any;
    _expr_45: any;
    _expr_46: any;
    _expr_47: any;
    _expr_48: any;
    _expr_49: any;
    _expr_50: any;
    _expr_51: any;
    _expr_52: any;
    _expr_53: any;
    _expr_54: any;
    _expr_55: any;
    _expr_56: any;
    _expr_57: any;
    _expr_58: any;
    _expr_59: any;
    _expr_60: any;
    _expr_61: any;
    _expr_62: any;
    _expr_63: any;
    _expr_64: any;
    _expr_65: any;
    _expr_66: any;
    _expr_67: any;
    _expr_68: any;
    _expr_69: any;
    _expr_70: any;
    _expr_71: any;
    _expr_72: any;
    _expr_73: any;
    _expr_74: any;
    _expr_75: any;
    _expr_76: any;
    _expr_77: any;
    _expr_78: any;
    _expr_79: any;
    _expr_80: any;
    _expr_81: any;
    _expr_82: any;
    _expr_83: any;
    _expr_84: any;
    _expr_85: any;
    _expr_86: any;
    _expr_87: any;
    _expr_88: any;
    _expr_89: any;
    _expr_90: any;
    _expr_91: any;
    _expr_92: any;
    _expr_93: any;
    _expr_94: any;
    _expr_95: any;
    _expr_96: any;
    _expr_97: any;
    _expr_98: any;
    _expr_99: any;
    _expr_100: any;
    _expr_101: any;
    _expr_102: any;
    _expr_103: any;
    _expr_104: any;
    _expr_105: any;
    _expr_106: any;
    _expr_107: any;
    _expr_108: any;
    _expr_109: any;
    _expr_110: any;
    _expr_111: any;
    _expr_112: any;
    _expr_113: any;
    _expr_114: any;
    _expr_115: any;
    _expr_116: any;
    _expr_117: any;
    _expr_118: any;
    _expr_119: any;
    _expr_120: any;
    _expr_121: any;
    _expr_122: any;
    _expr_123: any;
    _expr_124: any;
    _expr_125: any;
    _expr_126: any;
    _expr_127: any;
    _expr_128: any;
    _expr_129: any;
    _expr_130: any;
    _expr_131: any;
    _expr_132: any;
    _expr_133: any;
    _expr_134: any;
    _expr_135: any;
    _expr_136: any;
    _expr_137: any;
    subscription0: any;
    subscription1: any;
    subscription2: any;
    subscription3: any;
    subscription4: any;
    subscription5: any;
    subscription6: any;
    subscription7: any;
    subscription8: any;
    subscription9: any;
    subscription10: any;
    subscription11: any;
    subscription12: any;
    subscription13: any;
    subscription14: any;
    subscription15: any;
    subscription16: any;
    subscription17: any;
    subscription18: any;
    subscription19: any;
    subscription20: any;
    subscription21: any;
    subscription22: any;
    subscription23: any;
    subscription24: any;
    subscription25: any;
    subscription26: any;
    subscription27: any;
    subscription28: any;
    subscription29: any;
    subscription30: any;
    subscription31: any;
    subscription32: any;
    subscription33: any;
    subscription34: any;
    subscription35: any;
    subscription36: any;
    subscription37: any;
    subscription38: any;
    subscription39: any;
    subscription40: any;
    subscription41: any;
    subscription42: any;
    subscription43: any;
    subscription44: any;
    subscription45: any;
    subscription46: any;
    subscription47: any;
    subscription48: any;
    subscription49: any;
    subscription50: any;
    constructor(p0: any, p1: any, p2: any);
    ngOnDetach(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any): void;
    ngOnDestroy(): void;
    check_gridOptions(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_slaveGrids(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowData(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_floatingTopRowData(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_floatingBottomRowData(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_columnDefs(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_defaultColDef(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowStyle(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_context(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupColumnDef(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_localeText(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_icons(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_datasource(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_viewportDatasource(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRowRendererParams(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_aggFuncs(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_fullWidthCellRendererParams(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_sortingOrder(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowClass(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowSelection(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_overlayLoadingTemplate(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_overlayNoRowsTemplate(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_headerCellTemplate(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_quickFilterText(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowModelType(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowHeight(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowBuffer(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_colWidth(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_headerHeight(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupDefaultExpanded(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_minColWidth(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_maxColWidth(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_viewportRowModelPageSize(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_viewportRowModelBufferSize(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_layoutInterval(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_autoSizePadding(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_maxPagesInCache(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_maxConcurrentDatasourceRequests(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_paginationOverflowSize(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_paginationPageSize(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_paginationInitialRowCount(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_headerCellRenderer(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_localeTextFunc(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRowInnerRenderer(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRowRenderer(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_isScrollLag(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_isExternalFilterPresent(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getRowHeight(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_doesExternalFilterPass(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getRowClass(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getRowStyle(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getHeaderCellTemplate(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_traverseNode(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getContextMenuItems(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getMainMenuItems(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_processRowPostCreate(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_processCellForClipboard(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getNodeChildDetails(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRowAggNodes(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getRowNodeId(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_isFullWidthCell(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_fullWidthCellRenderer(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_doesDataFlower(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_toolPanelSuppressRowGroups(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_toolPanelSuppressValues(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_toolPanelSuppressPivots(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_toolPanelSuppressPivotMode(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressRowClickSelection(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressCellSelection(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressHorizontalScroll(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_debug(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableColResize(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableCellExpressions(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableSorting(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableServerSideSorting(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableFilter(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableServerSideFilter(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_angularCompileRows(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_angularCompileFilters(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_angularCompileHeaders(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupSuppressAutoColumn(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupSelectsChildren(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupIncludeFooter(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupUseEntireRow(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupSuppressRow(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupSuppressBlankHeader(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_forPrint(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMenuHide(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowDeselection(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_unSortIcon(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMultiSort(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressScrollLag(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_singleClickEdit(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressLoadingOverlay(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressNoRowsOverlay(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressAutoSize(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressParentsInRowNodes(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_showToolPanel(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressColumnMoveAnimation(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMovableColumns(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressFieldDotNotation(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableRangeSelection(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressEnterprise(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rowGroupPanelShow(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_pivotPanelShow(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressContextMenu(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMenuFilterPanel(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMenuMainPanel(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMenuColumnPanel(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableStatusBar(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rememberGroupStateWhenNewData(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_enableCellChangeFlash(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressDragLeaveHidesColumns(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressMiddleClickScrolls(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressPreventDefaultOnMouseWheel(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressUseColIdForGroups(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressCopyRowsToClipboard(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_pivotMode(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressAggFuncInHeader(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressColumnVirtualisation(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressFocusAfterRefresh(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_functionsPassive(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_functionsReadOnly(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_defaultColGroupDef(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_editType(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_scrollbarWidth(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRowInnerRendererFramework(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRowRendererFramework(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_fullWidthCellRendererFramework(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_processSecondaryColDef(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_processSecondaryColGroupDef(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressRowHoverClass(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_suppressTouch(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_animateRows(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupSelectsFiltered(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_groupRemoveSingleChildren(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_getBusinessKeyForNode(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_checkboxSelection(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    ngDoCheck(view: import2.AppView<any>, el: any, throwOnChange: boolean): boolean;
    checkHost(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any, throwOnChange: boolean): void;
    handleEvent(eventName: string, $event: any): boolean;
    subscribe(view: import2.AppView<any>, _eventHandler: any, emit0: boolean, emit1: boolean, emit2: boolean, emit3: boolean, emit4: boolean, emit5: boolean, emit6: boolean, emit7: boolean, emit8: boolean, emit9: boolean, emit10: boolean, emit11: boolean, emit12: boolean, emit13: boolean, emit14: boolean, emit15: boolean, emit16: boolean, emit17: boolean, emit18: boolean, emit19: boolean, emit20: boolean, emit21: boolean, emit22: boolean, emit23: boolean, emit24: boolean, emit25: boolean, emit26: boolean, emit27: boolean, emit28: boolean, emit29: boolean, emit30: boolean, emit31: boolean, emit32: boolean, emit33: boolean, emit34: boolean, emit35: boolean, emit36: boolean, emit37: boolean, emit38: boolean, emit39: boolean, emit40: boolean, emit41: boolean, emit42: boolean, emit43: boolean, emit44: boolean, emit45: boolean, emit46: boolean, emit47: boolean, emit48: boolean, emit49: boolean, emit50: boolean): void;
}
export declare const AgGridNg2NgFactory: import10.ComponentFactory<import0.AgGridNg2>;
export declare class View_AgGridNg20 extends import2.AppView<import0.AgGridNg2> {
    constructor(viewUtils: import3.ViewUtils, parentView: import2.AppView<any>, parentIndex: number, parentElement: any);
    createInternal(rootSelector: string): import10.ComponentRef<any>;
}
